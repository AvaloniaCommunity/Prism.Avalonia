//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Prism.DryIoc.Avalonia.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Prism.DryIoc.Avalonia.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bootstrapper sequence completed..
        /// </summary>
        public static string BootstrapperSequenceCompleted {
            get {
                return ResourceManager.GetString("BootstrapperSequenceCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuring default region behaviors..
        /// </summary>
        public static string ConfiguringDefaultRegionBehaviors {
            get {
                return ResourceManager.GetString("ConfiguringDefaultRegionBehaviors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuring the DryIoc container..
        /// </summary>
        public static string ConfiguringDryIocContainer {
            get {
                return ResourceManager.GetString("ConfiguringDryIocContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuring module catalog..
        /// </summary>
        public static string ConfiguringModuleCatalog {
            get {
                return ResourceManager.GetString("ConfiguringModuleCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuring region adapters..
        /// </summary>
        public static string ConfiguringRegionAdapters {
            get {
                return ResourceManager.GetString("ConfiguringRegionAdapters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuring ServiceLocator singleton..
        /// </summary>
        public static string ConfiguringServiceLocatorSingleton {
            get {
                return ResourceManager.GetString("ConfiguringServiceLocatorSingleton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuring the ViewModelLocator to use DryIoc..
        /// </summary>
        public static string ConfiguringViewModelLocator {
            get {
                return ResourceManager.GetString("ConfiguringViewModelLocator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating DryIoc container..
        /// </summary>
        public static string CreatingDryIocContainer {
            get {
                return ResourceManager.GetString("CreatingDryIocContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating module catalog..
        /// </summary>
        public static string CreatingModuleCatalog {
            get {
                return ResourceManager.GetString("CreatingModuleCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating the shell..
        /// </summary>
        public static string CreatingShell {
            get {
                return ResourceManager.GetString("CreatingShell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing modules..
        /// </summary>
        public static string InitializingModules {
            get {
                return ResourceManager.GetString("InitializingModules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing the shell..
        /// </summary>
        public static string InitializingShell {
            get {
                return ResourceManager.GetString("InitializingShell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logger was created successfully..
        /// </summary>
        public static string LoggerCreatedSuccessfully {
            get {
                return ResourceManager.GetString("LoggerCreatedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The method &apos;GetModuleEnumerator&apos; of the bootstrapper must be overwritten in order to use the default module initialization logic..
        /// </summary>
        public static string NotOverwrittenGetModuleEnumeratorException {
            get {
                return ResourceManager.GetString("NotOverwrittenGetModuleEnumeratorException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ContainerBuilder is required and cannot be null..
        /// </summary>
        public static string NullDryIocContainerBuilderException {
            get {
                return ResourceManager.GetString("NullDryIocContainerBuilderException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IContainer is required and cannot be null..
        /// </summary>
        public static string NullDryIocContainerException {
            get {
                return ResourceManager.GetString("NullDryIocContainerException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ILoggerFacade is required and cannot be null..
        /// </summary>
        public static string NullLoggerFacadeException {
            get {
                return ResourceManager.GetString("NullLoggerFacadeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IModuleCatalog is required and cannot be null in order to initialize the modules..
        /// </summary>
        public static string NullModuleCatalogException {
            get {
                return ResourceManager.GetString("NullModuleCatalogException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registering Framework Exception Types..
        /// </summary>
        public static string RegisteringFrameworkExceptionTypes {
            get {
                return ResourceManager.GetString("RegisteringFrameworkExceptionTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting the RegionManager..
        /// </summary>
        public static string SettingTheRegionManager {
            get {
                return ResourceManager.GetString("SettingTheRegionManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; was already registered by the application. Skipping....
        /// </summary>
        public static string TypeMappingAlreadyRegistered {
            get {
                return ResourceManager.GetString("TypeMappingAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating Regions..
        /// </summary>
        public static string UpdatingRegions {
            get {
                return ResourceManager.GetString("UpdatingRegions", resourceCulture);
            }
        }
    }
}
